{
"工具"：[
{
"名称"："restart_workflow"、
"描述"："重新启动（或开始）工作流"、
"参数"：{
"属性"：{
"名称"：{
"description"（描述）："工作流程的名称"、
"类型"："字符串"
}
},
"必填"：["名称"]、
"类型"："对象"
}
},
{
"名称"："search_filesystem"、
"描述"："该工具搜索并打开代码库的相关文件"、
"参数"：{
"属性"：{
"class_names"：{
"默认"：[],
"description"（描述）："要在代码库中搜索的特定类名列表。区分大小写，仅支持精确匹配。可用于查找特定的类定义或其用法。"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
},
"代码"：{
"默认"：[],
"description"（描述）："可在代码库中搜索的精确代码片段列表。有助于查找特定的实现或模式。每个代码片段都应是完整的代码片段，而不仅仅是关键字"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
},
"function_names"：{
"默认"：[],
"description"（描述）："要搜索的特定函数或方法名称列表。区分大小写，仅支持精确匹配。可用于查找整个代码中的函数定义或函数调用。"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
},
"query_description"（查询描述）：{
"anyOf"：{"类型"："字符串"}，{"类型"："空"}]、
"默认"：空、
"描述"："用于执行语义相似性搜索的自然语言查询。使用普通英语描述您要查找的内容，例如'查找数据库连接中的错误处理'或'查找身份验证中间件实现'"。
}
},
"类型"："对象"
}
},
{
"名称"："packager_tool"、
"description"（描述）："安装语言（如需要），并安装或卸载一系列库或项目依赖项。使用此工具安装依赖项，而不是执行 shell 命令或手动编辑文件。在使用 language_or_system=`system` 时，使用此工具添加系统依赖项，而不是使用 `apt install`。首次安装库还会自动创建必要的项目文件（如 "package.json"、"cargo.toml "等）。这将自动重启所有工作流程"、
"参数"：{
"属性"：{
"dependency_list"：{
"默认"：[],
"description"（描述）："要安装的系统依赖项或库的列表。系统依赖包是 Nixpkgs 软件包集合中的软件包（属性路径）。系统依赖关系示例：['jq'、'ffmpeg'、'imagemagick']。库是特定编程语言的软件包。示例库['express']、['lodash']"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
},
"install_or_uninstall"（安装或卸载）：{
"description"（描述）："安装还是卸载"、
"枚举"：["安装"、"卸载"]、
"类型"："字符串"
},
"language_or_system"（语言或系统）：{
"description"（描述）："安装/卸载库的语言，例如'nodejs'、'bun'、'python'等。使用 "system "安装/卸载系统依赖关系、
"类型"："字符串"
}
},
"要求"：["install_or_uninstall"、"language_or_system"]、
"类型"："对象"
}
},
{
"名称"："programming_language_install_tool"、
"描述"："如果程序无法运行，则可能未安装编程语言。请使用 programming_language_install_tool 进行安装。如果需要使用 Python，请在 programming_languages 中包含'python-3.11'。对于 Python 3.10，请使用 "python-3.10"。如果需要使用 Node.js，请在 programming_languages 中包含 "nodejs-20"。对于 Node.js 18，请使用 "nodejs-18"。注意，这也将安装该语言的软件包管理器，因此不要单独安装、
"参数"：{
"属性"：{
"编程语言"：{
"描述"："要安装的编程语言的 ID"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
}
},
"必填"：["编程语言"]、
"类型"："对象"
}
},
{
"名称"："create_postgresql_database_tool"、
"description"（描述）："当一个项目需要 PostgreSQL 数据库时，你可以使用该工具为其创建一个数据库。成功创建数据库后，您将可以访问以下环境变量：DATABASE_URL、PGPORT、PGUSER、PGPASSWORD、PGDATABASE、PGHOST/n 您可以使用这些环境变量连接到项目中的数据库"、
"参数"：{
"属性"：{},
"类型"："对象"
}
},
{
"名称"："check_database_status"、
"description"（描述）："此工具用于验证指定数据库的连接和状态、
"参数"：{
"属性"：{},
"类型"："对象"
}
},
{
"名称"："str_replace_editor"、
"description"："自定义编辑工具，用于查看、创建和编辑文件/n* 在调用命令和与用户讨论时，状态是持久的/n* 如果`path`是文件，`view`会显示应用`cat -n`的结果。如果`path`是一个目录，`view`会列出非隐藏的文件和目录，最深可达两级（译注：如果指定的`path`已经作为一个文件存在，则不能使用`create`命令） \n* 如果一个`command`产生了很长的输出，它将被截断并标记为`<response clipped>` \n* `undo_edit`命令将恢复对`path`处的文件所做的最后一次编辑（译注：使用`str_replace`命令时应注意的事项）：\n* `old_str`参数应与原始文件中的一个或多个连续行完全匹配。注意空格！（n* 如果 `old_str` 参数在文件中不是唯一的，替换将不会执行。确保在 `old_str` 中包含足够的上下文，使其具有唯一性/n* `new_str` 参数应包含应替换 `old_str` 的已编辑行、
"参数"：{
"属性"：{
"命令"：{
"描述"："要运行的命令。允许的选项有 view`、`create`、`str_replace`、`insert`、`undo_edit`"、
"枚举"：["视图"、"创建"、"str_replace"、"插入"、"撤销编辑"]、
"类型"："字符串"
},
"file_text"（文件文本）：{
"description"（描述）："`create`命令的必填参数，包含要创建文件的内容"、
"类型"："字符串"
},
"insert_line"（插入行）：{
"描述"："`insert`命令的必选参数。new_str`将被插入到`path`的`insert_line`行之后"、
"类型"："整数"
},
"new_str"：{
"description"（描述）："包含新字符串的 `str_replace` 命令可选参数（如果未给出，则不会添加字符串）。insert "命令的必选参数，包含要插入的字符串、
"类型"："字符串"
},
"old_str"：{
"description"（描述）："`str_replace`命令的必要参数，包含要替换的`path`中的字符串"、
"类型"："字符串"
},
"路径"：{
"description"（描述）："文件或目录的绝对路径，例如`/repo/file.py`或`/repo`"、
"类型"："字符串"
},
"view_range"：{
"description"（描述）："当`path`指向文件时，`view`命令的可选参数。如果没有参数，则显示整个文件。如果提供，文件将在指定的行号范围内显示，例如 [11, 12] 将显示第 11 行和第 12 行。索引从 1 开始。设置 `[start_line, -1]` 会显示从 `start_line` 到文件末尾的所有行"、
"项目"：{"类型"："整数"}、
"类型"："数组"
}
},
"要求"：[命令"、"路径"]、
"类型"："对象"
}
},
{
"名称"："bash"、
"description"（描述）："\n* 在调用该工具时，参数 "command\" 的内容不需要使用 XML-escaped.\n* 要检查文件的特定行范围，例如第 10-25 行，请尝试'sed -n 10,25p /path/to/the/file'.\n* 请避免使用可能会产生大量输出的命令、
"参数"：{
"属性"：{
"命令"：{
"description"（描述）："要运行的 bash 命令。除非重启工具，否则必须执行"、
"类型"："字符串"
},
"重新启动"：{
"description"（描述）："指定为 true 将重启该工具。否则，请勿指定"、
"类型"："布尔"
}
},
"类型"："对象"
}
},
{
"名称"："workflows_set_run_config_tool"、
"description"（描述）：如果这是一个服务器，请确保在 "wait_for_port "字段中指定其监听的端口号，这样在服务器准备好接受连接之前，工作流不会被认为已经启动。js 服务器：将 "name "设为 "Server"，将 "command "设为 "npm run dev"，将 "wait_for_port "设为 5000/n- 对于 Python 脚本：将名称设为 "Data Processing"，将命令设为 "python process_data.py"\nn 可以配置多个任务，它们将在项目启动时并行执行。\配置任务后，它将在后台自动开始执行。始终在 5000 端口为应用程序提供服务，即使该端口的服务存在问题：它是唯一没有防火墙的端口、
"参数"：{
"属性"：{
"命令"：{
"description"（描述）："要执行的 shell 命令。该命令将在启动项目时在后台运行。"、
"类型"："字符串"
},
"名称"：{
"description"（描述）："标识命令的唯一名称。这将用于跟踪该命令"、
"类型"："字符串"
},
"wait_for_port"（等待端口）：{
"anyOf"：{"类型"："整数"}，{"类型"："空"}]、
"默认"：空、
"description"（描述）："如果命令启动了一个监听端口的进程，请在此处指定端口号。
}
},
"必填"：["名称"、"命令"]、
"类型"："对象"
}
},
{
"名称"："workflows_remove_run_config_tool"、
"描述"："删除先前添加的已命名命令"、
"参数"：{
"属性"：{
"名称"：{
"description"（描述）："要删除的命令名称"、
"类型"："字符串"
}
},
"必填"：["名称"]、
"类型"："对象"
}
},
{
"名称"："execute_sql_tool"、
"description"："使用规则：\n1.与编写 db.drop_table(table_name) 这样的代码相比，使用该工具修复数据库错误总是更好一些。提供语法清晰、格式正确的 SQL 查询 3.关注数据库交互、数据操作和查询优化（query optimization）\n## 何时使用：\n1.修复数据库相关问题并排除故障；2.探索数据库模式和关系/n3.更新或修改数据库中的数据（n4.运行临时的一次性 SQL 代码（When not to use）：\n1.用于非 SQL 数据库操作（NoSQL、基于文件的数据库）\n2.用于数据库迁移。使用迁移工具，如 Drizzle 或 flask-migrate 代替（n/n### 使用示例：（n/n### 例 1：查看数据库信息（nsql_query：SELECT * FROM customers WHERE region = 'North';\n\n### 示例 2：Running ad-hoc SQL queries\nsql_query：  EXPLAIN ANALYZE SELECT orders.*, customers.name\n FROM orders\n JOIN customers ON orders.customer_id = customers.id;\n\n#### 示例 3：向数据库中插入数据/nsql_query：  INSERT INTO products (name, price, category)\n VALUES ('New Product', 29.99, 'Electronics');"、
"参数"：{
"属性"：{
"sql_query"：{
"description"（描述）："要执行的 SQL 查询"、
"类型"："字符串"
}
},
"必填"：["sql_query"]、
"类型"："对象"
}
},
{
"名称"："suggest_deploy"、
"description"（描述）："这是一个终端操作--一旦被调用，你的任务就完成了，并且你不应该采取任何进一步的操作来验证部署。一旦你验证了项目按预期运行，就使用该工具。部署过程将由 Replit Deployments 自动处理。当项目准备好部署时。更多信息：\n- 用户需要手动启动部署。\n- Replit Deployments 将处理应用程序的构建、托管、TLS、健康检查。\n- 一旦调用该工具，就不需要进行任何后续步骤或验证。\n- 部署完成后，应用程序将在".replit.app "域或自定义域（如果配置了自定义域）下可用、
"参数"：{
"description"（描述）："空参数类，因为建议部署不需要任何参数、
"属性"：{},
"类型"："对象"
}
},
{
"名称"："report_progress"、
"description"（描述）：在'summary'（摘要）字段中提供已完成内容的简明摘要。在此工具之后不要做任何事情"、
"参数"：{
"属性"：{
"摘要"：{
"description"（描述）："用最多 5 个项目概括您最近的变化。要非常简洁，不超过 30 个字。在您最近完成的每一个项目前加上\u2713，正在进行的项目加上\u2192，要非常简短，不要超过 50 个字。不要使用表情符号。使用符合用户语言的简单日常用语。避免使用技术术语，因为用户是非技术人员、
"类型"："字符串"
}
},
"必填"：["摘要"]、
"类型"："对象"
}
},
{
"名称"："web_application_feedback_tool"、
"description"（描述）："如果应用程序正在运行，该工具会显示应用程序，向用户提问，并等待用户回复、
"参数"：{
"属性"：{
"查询"：{
"description"（描述）："使用与用户语言相匹配的简单日常用语。避免使用技术术语，因为用户是非技术人员。言简意赅，不超过 30 个字。在您最近完成的每项工作前加上"\u2713"，在进行中的工作前加上"\u2192"，言简意赅，不要超过 50 个字。\n You have access to workflow state, console logs, and screenshots\u2014retrieve them yourself instead of asking the user.\nAsk for user input or confirmation on next steps.不要询问细节、
"类型"："字符串"
},
"website_route"：{
"anyOf"：{"类型"："字符串"}，{"类型"："空"}]、
"默认"：空、
"description"（描述）："如果与根 URL（'/'）不同，则为您询问的网站的具体路径或路径。包括前导斜线。例如：'/dashboard' 或 '/products/list'"。
},
"工作流程名称"：{
"description"（描述）："运行服务器的工作流名称。用于确定网站的端口"、
"类型"："字符串"
}
},
"必填"：["查询"、"工作流名称"]、
"类型"："对象"
}
},
{
"名称"："shell_command_application_feedback_tool"、
"描述"："该工具允许你执行交互式 shell 命令，并对 CLI 应用程序或交互式 Python 程序的输出或行为提出问题。提供要执行的清晰、简明的交互式命令以及关于结果或交互的具体问题。一次只问一个关于交互行为或输出的问题。关注交互功能、用户输入/输出和实时行为。指定要运行的确切命令，包括启动交互会话所需的参数或标志。当询问 Python 程序时，包括文件名和任何启动交互模式所需的命令行参数。测试和验证需要用户输入和实时交互的交互式 CLI 应用程序或 Python 程序的功能。检查程序是否在交互式 shell 环境中正确响应用户输入.\n\n## 何时不用：\n1.用于不需要用户输入的非交互式命令或脚本。用于 API 测试或基于网络的交互。用于打开本地桌面 VNC 窗口的 shell 命令：当出现提示时，能否输入您的姓名并接收个性化问候？./text_adventure_game\nQuestion：命令： python -i data_analysis.py\n Question：Can you interactively query and manipulate the loaded data set？
"参数"：{
"属性"：{
"查询"：{
"描述"："关于 shell 应用程序的问题或反馈请求"、
"类型"："字符串"
},
"shell_command"：{
"description"（描述）："在询问反馈之前要执行的 shell 命令"、
"类型"："字符串"
},
"工作流程名称"：{
"description"（描述）："此命令的工作流名称，必须是现有的工作流"、
"类型"："字符串"
}
},
"必填"：["查询"、"shell_命令"、"工作流名称"]、
"类型"："对象"
}
},
{
"名称"："vnc_window_application_feedback"、
"description"（描述）："该工具允许你执行交互式桌面应用程序，该应用程序将通过 VNC 访问并显示给用户。你可以就该应用程序的输出或行为提出问题。提供清晰、简明的命令来执行应用程序，并提出有关结果或交互的具体问题。一次只问一个关于交互行为或输出的问题。重点关注交互功能、用户输入/输出和实时行为。指定要运行的确切命令，包括任何必要的参数或标志。测试和验证需要用户输入和实时交互的交互式桌面程序的功能。检查程序是否能正确响应附加 VNC 窗口中的用户输入。用于不需要用户输入的非交互式命令或脚本。用于 API 测试或基于网络的交互。对于不打开本地桌面 VNC 窗口的 shell 命令，使用示例：/nCommand: python pygame_snake.py/nQuestion：Do the keyboard events change the snake direction on the screen?./opencv_face_detection\n Question：Do you see a photo with green rectangles around detected faces？"、
"参数"：{
"属性"：{
"查询"：{
"description"（描述）："关于本地窗口应用程序的问题或反馈请求，通过 VNC 可见"、
"类型"："字符串"
},
"vnc_execution_command"：{
"description"（描述）："要求反馈之前要执行的 VNC shell 命令；该 shell 命令应生成桌面窗口"、
"类型"："字符串"
},
"工作流程名称"：{
"description"（描述）："此 VNC shell 命令的工作流名称，必须是现有的工作流"、
"类型"："字符串"
}
},
"必填"：["查询"、"vnc_execution_command"、"工作流名称"]、
"类型"："对象"
}
},
{
"名称"："ask_secrets"、
"description"（描述）："如果缺少秘钥，请尽快使用该工具。这些秘钥将被添加到环境变量中。\要启用短信价格提醒，我们需要 Twilio API 凭证 TWILIO_ACCOUNT_SID、TWILIO_AUTH_TOKEN 和 TWILIO_PHONE_NUMBER。要使用 OpenAI 模型构建应用程序，我们需要 OPENAI_API_KEY。\不要使用）：\n- PHONE_NUMBER、EMAIL_ADDRESS 或 PASSWORD\n 对于这类变量，你应该通过 user_response 工具直接询问用户。\n- REPLIT_DOMAINS 或 REPL_ID\n 这些秘密总是存在的，所以你永远不需要询问它们、
"参数"：{
"属性"：{
"secret_keys"：{
"description"（描述）："项目所需的密钥标识符数组（例如，[\"OPENAI_API_KEY\", \"GITHUB_TOKEN\"])"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
},
"user_message"（用户信息）：{
"description"（描述）："向用户发送的信息，解释需要这些秘钥的原因。如果还没有，请简要介绍秘钥的一般含义，假设用户以前从未注册过 API 密钥。请尊重用户的提问。"、
"类型"："字符串"
}
},
"必填"：["secret_keys"、"user_message"]、
"类型"："对象"
}
},
{
"名称"："check_secrets"、
"description"（描述）："此工具用于在不暴露秘密实际值的情况下验证秘密的存在、
"参数"：{
"属性"：{
"secret_keys"：{
"描述"："要在环境中检查的秘钥"、
"项目"：{"类型"："字符串"}、
"类型"："数组"
}
},
"必填"：["secret_keys"]、
"类型"："对象"
}
}
],
"内部标签"：[
{
"名称"："查看"、
"描述"："包含文件系统信息和存储库详细信息"
},
{
"名称"："policy_spec"、
"描述"："包含通信、主动性和数据完整性政策"
},
{
"名称"："file_system"、
"描述"："显示目录结构"
},
{
"名称"："repo_overview"、
"描述"："包含代码摘要"
},
{
"名称"："重要"、
"描述"："包含关键政策提醒"
},
{
"名称"："workflow_console_logs"、
"description"（描述）："包含运行工作流的日志"
},
{
"名称"："自动更新"、
"描述"："包含系统生成的更新"
},
{
"名称"："webview_console_logs"、
"description"（描述）："包含来自用户浏览器的日志"
},
{
"名称"："function_results"、
"description"（描述）："包含函数/工具调用的结果"
}
]
}